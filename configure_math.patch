--- configure	2011-09-08 23:24:27.000000000 +0200
+++ configure_ng	2011-09-14 11:42:24.299164763 +0200
@@ -4,22 +4,22 @@
 # uname -m = i636 or x86_64
 
 if [ "$1" = "-h" ]; then
-  echo Options:
-  echo "  --prefix=path              path to install hydra and its datafiles to"
-  echo "  --with-oracle=prefix       prefix for oracle include dir"
-  echo "  --with-oracle-lib=prefix   prefix for oracle lib dir"
-  echo "  --disable-xhydra           disable compilation of hydra GUI"
-  echo "  --help                     this here"
-  exit 0
+    echo Options:
+    echo "  --prefix=path              path to install hydra and its datafiles to"
+    echo "  --with-oracle=prefix       prefix for oracle include dir"
+    echo "  --with-oracle-lib=prefix   prefix for oracle lib dir"
+    echo "  --disable-xhydra           disable compilation of hydra GUI"
+    echo "  --help                     this here"
+    exit 0
 fi
 if [ "$1" = "--help" ]; then
-  echo Options:
-  echo "  --prefix=path              path to install hydra and its datafiles to"
-  echo "  --with-oracle=prefix       prefix for oracle include dir"
-  echo "  --with-oracle-lib=prefix   prefix for oracle lib dir"
-  echo "  --disable-xhydra           disable compilation of hydra GUI"
-  echo "  --help                     this here"
-  exit 0
+    echo Options:
+    echo "  --prefix=path              path to install hydra and its datafiles to"
+    echo "  --with-oracle=prefix       prefix for oracle include dir"
+    echo "  --with-oracle-lib=prefix   prefix for oracle lib dir"
+    echo "  --disable-xhydra           disable compilation of hydra GUI"
+    echo "  --help                     this here"
+    exit 0
 fi
 
 echo
@@ -29,14 +29,14 @@ SYSS=`uname -s 2> /dev/null`
 SYSO=`uname -o 2> /dev/null`
 SIXFOUR=""
 if [ "$SYSS" = "Linux" -o "$SYSS" = "OpenBSD" -o "$SYSS" = "FreeBSD" -o "$SYSS" = "NetBSD" ]; then
-  SF=`uname -m | grep 64`
-  if [ "x$SF" = "x" ]; then
-    SIXFOUR=""
-    echo Detected 32 Bit $SYSS OS
-  else
-    SIXFOUR=64
-    echo Detected 64 Bit $SYSS OS
-  fi
+    SF=`uname -m | grep 64`
+    if [ "x$SF" = "x" ]; then
+        SIXFOUR=""
+        echo Detected 32 Bit $SYSS OS
+    else
+        SIXFOUR=64
+        echo Detected 64 Bit $SYSS OS
+    fi
 fi
 PREFIX=""
 ORACLE_PATH=""
@@ -73,7 +73,7 @@ MANDIR=""
 XHYDRA_SUPPORT=""
 LIBDIRS=`cat /etc/ld.so.conf /etc/ld.so.conf.d/* 2> /dev/null | grep -v '^#' | sort | uniq`
 if [ "$SIXFOUR" = "64" ]; then
-  LIBDIRS="$LIBDIRS /lib64 /usr/lib64 /usr/local/lib64 /opt/local/lib64"
+    LIBDIRS="$LIBDIRS /lib64 /usr/lib64 /usr/local/lib64 /opt/local/lib64"
 fi
 LIBDIRS="$LIBDIRS /lib /usr/lib /usr/local/lib /opt/local/lib"
 INCDIRS="/usr/include /usr/local/include /opt/include /opt/local/include"
@@ -82,8 +82,8 @@ echo
 
 echo "Checking for openssl (libssl, libcrypto, ssl.h, sha.h) ..."
 for i in  $LIBDIRS \
-/*ssl /usr/*ssl /opt/*ssl /usr/local/*ssl /opt/local/*ssl \
-/*ssl/lib /usr/*ssl/lib /opt/*ssl/lib /usr/local/*ssl/lib /opt/local/*ssl/lib
+    /*ssl /usr/*ssl /opt/*ssl /usr/local/*ssl /opt/local/*ssl \
+    /*ssl/lib /usr/*ssl/lib /opt/*ssl/lib /usr/local/*ssl/lib /opt/local/*ssl/lib
 do
     if [ "X" = "X$SSL_PATH" ]; then
         if [ -f "$i/libssl.so" -o -f "$i/libssl.dylib" ]; then
@@ -93,7 +93,7 @@ do
     if [ "X" = "X$SSL_PATH" ]; then
         TMP_LIB=`/bin/ls $i/libssl.so* /bin/cygssl*.dll 2> /dev/null | grep ssl`
         if [ -n "$TMP_LIB" ]; then
-          SSL_PATH="$i"
+            SSL_PATH="$i"
         fi
     fi
     if [ "X" = "X$CRYPTO_PATH" ]; then
@@ -104,7 +104,7 @@ do
     if [ "X" = "X$CRYPTO_PATH" ]; then
         TMP_LIB=`/bin/ls $i/libcrypto.so* /bin/cygcrypto*.dll 2> /dev/null | grep crypto`
         if [ -n "$TMP_LIB" ]; then
-          CRYPTO_PATH="$i"
+            CRYPTO_PATH="$i"
         fi
     fi
 done
@@ -130,9 +130,9 @@ if [ "X" = "X$SSL_IPATH" ]; then
 fi
 if [ -n "$SSL_PATH" ]; then
     echo "                                                       ... found"
-  if [ "X" = "X$SSLNEW" ]; then
-    echo "NOTE: your OpenSSL package is outdated, update for more hydra feature!"
-  fi
+    if [ "X" = "X$SSLNEW" ]; then
+        echo "NOTE: your OpenSSL package is outdated, update for more hydra feature!"
+    fi
 fi
 if [ "X" = "X$SSL_PATH" ]; then
     echo "                                                       ... NOT found, SSL support disabled"
@@ -148,7 +148,7 @@ do
     if [ "X" = "X$IDN_PATH" ]; then
         TMP_LIB=`/bin/ls $i/libidn.so.* 2> /dev/null | grep libidn.`
         if [ -n "$TMP_LIB" ]; then
-          IDN_PATH="$i"
+            IDN_PATH="$i"
         fi
     fi
 done
@@ -183,7 +183,7 @@ do
     if [ "X" = "X$PCRE_PATH" ]; then
         TMP_LIB=`/bin/ls $i/libpcre.so* 2> /dev/null | grep libpcre.`
         if [ -n "$TMP_LIB" ]; then
-          PCRE_PATH="$i"
+            PCRE_PATH="$i"
         fi
     fi
 done
@@ -215,13 +215,13 @@ do
     if [ "X" = "X$POSTGRES_PATH" ]; then
         TMP_LIB=`/bin/ls $i/libpq.so* 2> /dev/null | grep pq`
         if [ -n "$TMP_LIB" ]; then
-          POSTGRES_PATH="$i"
+            POSTGRES_PATH="$i"
         fi
     fi
 done
 POSTGRES_IPATH=
 for i in $INCDIRS \
-  /opt/p*sql*/include /usr/*p*sql*/include /usr/local/*psql*/include
+    /opt/p*sql*/include /usr/*p*sql*/include /usr/local/*psql*/include
 do
     if [ "X" = "X$POSTGRES_IPATH" ]; then
         if [ -f "$i/libpq-fe.h" ]; then
@@ -251,14 +251,14 @@ do
     if [ "X" = "X$SVN_PATH" ]; then
         if [ -f "$i/libsvn_client-1.so" ]&&[ -f "$i/libapr-1.so" ]&&[ -f "$i/libaprutil-1.so" ]; then
             SVN_PATH="$i"
-	    APR_PATH="$i"
+            APR_PATH="$i"
         fi
     fi
     if [ "X" = "X$SVN_PATH" ]; then
         TMP_LIB=`/bin/ls $i/libsvn_client*.so* 2> /dev/null | grep libsvn_client.`
         if [ -n "$TMP_LIB" ]; then
-          SVN_PATH="$i"
-	  APR_PATH="$i"
+            SVN_PATH="$i"
+            APR_PATH="$i"
         fi
     fi
 done
@@ -315,7 +315,7 @@ do
     if [ "X" = "X$FIREBIRD_PATH" ]; then
         TMP_LIB=`/bin/ls $i/libfbclient.so.* 2> /dev/null | grep libfbclient.`
         if [ -n "$TMP_LIB" ]; then
-          FIREBIRD_PATH="$i"
+            FIREBIRD_PATH="$i"
         fi
     fi
 done
@@ -337,7 +337,7 @@ if [ "X" = "X$FIREBIRD_PATH" -o "X" = "X
 fi
 
 echo "Checking for MYSQL client (libmysqlclient.so, math.h) ..."
-for i in  $LIBDIRS 
+for i in  $LIBDIRS
 do
     if [ "X" = "X$MYSQL_PATH" ]; then
         if [ -f "$i/libmysqlclient.so" ]; then
@@ -347,7 +347,7 @@ do
     if [ "X" = "X$MYSQL_PATH" ]; then
         TMP_LIB=`/bin/ls $i/libmysqlclient.so.* 2> /dev/null | grep libmysqlclient.`
         if [ -n "$TMP_LIB" ]; then
-          MYSQL_PATH="$i"
+            MYSQL_PATH="$i"
         fi
     fi
 done
@@ -360,20 +360,21 @@ do
     fi
 done
 MATH=""
-if [ -f "/usr/include/math.h" ]; then
-   MATH="-DHAVE_MATH_H"
-   if [ -n "$MYSQL_PATH" -a -n "$MYSQL_IPATH" -a -n "$MATH" ]; then
-      echo "                                                      ... found"
-   else
-      echo "                                                      ... NOT found, module Mysql will not support version > 4.x"
-      MYSQL_PATH=""
-      MYSQL_IPATH=""
-   fi
+#if [ -f "/usr/include/math.h" ]; then
+MATH="-DHAVE_MATH_H"
+#if [ -n "$MYSQL_PATH" -a -n "$MYSQL_IPATH" -a -n "$MATH" ]; then
+if [ -n "$MYSQL_PATH" -a -n "$MYSQL_IPATH" ]; then
+    echo "                                                      ... found"
 else
-      echo "                                       ... math.h not found, module Mysql disabled"
+    echo "                                                      ... NOT found, module Mysql will not support version > 4.x"
+    MYSQL_PATH=""
+    MYSQL_IPATH=""
 fi
+#else
+#echo "                                       ... math.h not found, module Mysql disabled"
+#fi
 echo "Checking for AFP (libafpclient.so) ..."
-for i in  $LIBDIRS 
+for i in  $LIBDIRS
 do
     if [ "X" = "X$AFP_PATH" ]; then
         if [ -f "$i/libafpclient.so" ]; then
@@ -383,7 +384,7 @@ do
     if [ "X" = "X$AFP_PATH" ]; then
         TMP_LIB=`/bin/ls $i/libafpclient.so.* 2> /dev/null | grep libafpclient.`
         if [ -n "$TMP_LIB" ]; then
-          AFP_PATH="$i"
+            AFP_PATH="$i"
         fi
     fi
 done
@@ -437,7 +438,7 @@ if [ "X" = "X$NCP_PATH" -o "X" = "X$NCP_
 fi
 
 echo "Checking for SAP/R3 (librfc/saprfc.h) ..."
-for i in  $LIBDIRS 
+for i in  $LIBDIRS
 do
     if [ "X" = "X$SAPR3_PATH" ]; then
         if [ -f "$i/librfc.a" -o -f "$i/librfc.dylib" -o "$i/librfc32.dll" ]; then
@@ -447,7 +448,7 @@ do
     if [ "X" = "X$SAPR3_PATH" ]; then
         TMP_LIB=`/bin/ls $i/librfc.* $i/librfc32.* 2> /dev/null | grep librfc`
         if [ -n "$TMP_LIB" ]; then
-          SAPR3_PATH="$i"
+            SAPR3_PATH="$i"
         fi
     fi
 done
@@ -477,7 +478,7 @@ if [ "$SAPR3_IPATH" = "/usr/include" ];
 fi
 
 echo "Checking for libssh (libssh/libssh.h) ..."
-for i in  $LIBDIRS 
+for i in  $LIBDIRS
 do
     if [ "X" = "X$SSH_PATH" ]; then
         if [ -f "$i/libssh.so" -o -f "$i/libssh.dylib" ]; then
@@ -487,7 +488,7 @@ do
     if [ "X" = "X$SSH_PATH" ]; then
         TMP_LIB=`/bin/ls $i/libssh.so* 2> /dev/null | grep libssh.`
         if [ -n "$TMP_LIB" ]; then
-          SSH_PATH="$i"
+            SSH_PATH="$i"
         fi
     fi
 done
@@ -517,34 +518,34 @@ if [ "$SSH_IPATH" = "/usr/include" ]; th
 fi
 
 if [ '!' "X" = "X$*" ]; then
-  while [ $# -gt 0 ];
-  do
-    if [ "X" = "X$PREFIX" ]; then
-  	  PREFIX_TMP=`echo "$1"|sed 's/.*--prefix=//'`
-	  if [ $PREFIX_TMP != $1 ]; then
-		  PREFIX=$PREFIX_TMP
-	  fi
-    fi
-    if [ "X" = "X$XHYDRA_SUPPORT" ]; then
-       XHYDRA_SUPPORT_TMP=`echo "$1"|sed 's/.*--disable-xhydra//'`
-       if [ -z $XHYDRA_SUPPORT_TMP ]; then
-	     XHYDRA_SUPPORT="disable"
-       fi
-    fi
-    if [ "X" = "X$WORACLE_PATH" ]; then
-  	  WORACLE_PATH_TMP=`echo "$1"|sed 's/.*--with-oracle=//'`
-	  if [ $WORACLE_PATH_TMP != $1 ]; then
-		  WORACLE_PATH=$WORACLE_PATH_TMP
-	  fi
-    fi
-    if [ "X" = "X$WORACLE_LIB_PATH" ]; then
-  	  WORACLE_LIB_PATH_TMP=`echo "$1"|sed 's/.*--with-oracle-lib=//'`
-	  if [ $WORACLE_LIB_PATH_TMP != $1 ]; then
-		  WORACLE_LIB_PATH=$WORACLE_LIB_PATH_TMP
-	  fi
-    fi
-    shift
-  done
+    while [ $# -gt 0 ];
+    do
+        if [ "X" = "X$PREFIX" ]; then
+            PREFIX_TMP=`echo "$1"|sed 's/.*--prefix=//'`
+            if [ $PREFIX_TMP != $1 ]; then
+                PREFIX=$PREFIX_TMP
+            fi
+        fi
+        if [ "X" = "X$XHYDRA_SUPPORT" ]; then
+            XHYDRA_SUPPORT_TMP=`echo "$1"|sed 's/.*--disable-xhydra//'`
+            if [ -z $XHYDRA_SUPPORT_TMP ]; then
+                XHYDRA_SUPPORT="disable"
+            fi
+        fi
+        if [ "X" = "X$WORACLE_PATH" ]; then
+            WORACLE_PATH_TMP=`echo "$1"|sed 's/.*--with-oracle=//'`
+            if [ $WORACLE_PATH_TMP != $1 ]; then
+                WORACLE_PATH=$WORACLE_PATH_TMP
+            fi
+        fi
+        if [ "X" = "X$WORACLE_LIB_PATH" ]; then
+            WORACLE_LIB_PATH_TMP=`echo "$1"|sed 's/.*--with-oracle-lib=//'`
+            if [ $WORACLE_LIB_PATH_TMP != $1 ]; then
+                WORACLE_LIB_PATH=$WORACLE_LIB_PATH_TMP
+            fi
+        fi
+        shift
+    done
 fi
 
 
@@ -571,10 +572,10 @@ do
             ORACLE_PATH="$i"
         fi
         if [ "X" != "X$ORACLE_PATH" ]; then
-          TMP_LIB=`/bin/ls $i/libclntsh.so.* 2> /dev/null | grep clntsh.`
-          if [ -z "$TMP_LIB" ]; then
-            ORACLE_PATH=""
-          fi
+            TMP_LIB=`/bin/ls $i/libclntsh.so.* 2> /dev/null | grep clntsh.`
+            if [ -z "$TMP_LIB" ]; then
+                ORACLE_PATH=""
+            fi
         fi
     fi
 done
@@ -598,22 +599,22 @@ fi
 
 if [ "X" = "X$XHYDRA_SUPPORT" ]; then
     echo "Checking for GUI req's (pkg-config, gtk+-2.0) ..."
-  XHYDRA_SUPPORT=`pkg-config --help > /dev/null 2>&1 || echo disabled`
-  if [ "X" = "X$XHYDRA_SUPPORT" ]; then
-     XHYDRA_SUPPORT=`pkg-config --modversion gtk+-2.0 2> /dev/null`
-  else
-     XHYDRA_SUPPORT=""
-  fi
-  if [ "X" = "X$XHYDRA_SUPPORT" ]; then
-    echo "                                              ... NOT found, optional anyway"
-  else
-    echo "                                              ... found"
-  fi
+    XHYDRA_SUPPORT=`pkg-config --help > /dev/null 2>&1 || echo disabled`
+    if [ "X" = "X$XHYDRA_SUPPORT" ]; then
+        XHYDRA_SUPPORT=`pkg-config --modversion gtk+-2.0 2> /dev/null`
+    else
+        XHYDRA_SUPPORT=""
+    fi
+    if [ "X" = "X$XHYDRA_SUPPORT" ]; then
+        echo "                                              ... NOT found, optional anyway"
+    else
+        echo "                                              ... found"
+    fi
 fi
 
 if [ "$SYSS" = "SunOS" ]; then
     echo "Checking for Solaris libraries ..."
-    for i in  $LIBDIRS 
+    for i in  $LIBDIRS
     do
         if [ "X" = "X$NSL_PATH" ]; then
             if [ -f "$i/libnsl.so" ]; then
@@ -697,10 +698,10 @@ fi
 OLDPATH=""
 for i in $SSL_PATH $CRYPTO_PATH $SSH_PATH $NSL_PATH $SOCKET_PATH $RESOLV_PATH $SAPR3_PATH $POSTGRES_PATH $SVN_PATH $NCP_PATH $ORACLE_PATH $AFP_PATH $MYSQL_PATH; do
     if [ "$OLDPATH" = "$i" ]; then
-      OLDPATH="$i"
+        OLDPATH="$i"
     else
-      XLIBPATHS="$XLIBPATHS -L$i"
-      OLDPATH="$i"
+        XLIBPATHS="$XLIBPATHS -L$i"
+        OLDPATH="$i"
     fi
 done
 if [ -n "$SSL_IPATH" ]; then
@@ -755,9 +756,9 @@ fi
 if [ -n "$SAPR3_PATH" ]; then
     XLIBS="$XLIBS -lrfc"
     if [ "$SYSO" = "Cygwin" ]; then
-      BLA=TMP
+        BLA=TMP
     else
-      XLIBS="$XLIBS -ldl"
+        XLIBS="$XLIBS -ldl"
     fi
 fi
 if [ -n "$POSTGRES_PATH" ]; then
@@ -783,7 +784,7 @@ if [ -n "$RESOLV_PATH" ]; then
 fi
 
 if [ -d /usr/kerberos/include ]; then
-  XIPATHS="$XIPATHS -I/usr/kerberos/include"
+    XIPATHS="$XIPATHS -I/usr/kerberos/include"
 fi
 
 if [ "X" = "X$PREFIX" ]; then
@@ -822,22 +823,22 @@ if [ "$SYSO" = "Cygwin" ]; then
     echo
     WINDRES=`which windres`
     test -x "$WINDRES" && {
-      echo "Windres found, will attach icons to hydra cygwin executables"
-      echo HYDRA_LOGO=hydra-logo.o >> Makefile
-      echo PWI_LOGO=pw-inspector-logo.o >> Makefile
-      windres hydra-logo.rc hydra-logo.o
-      windres pw-inspector-logo.rc pw-inspector-logo.o
-    }
-    test -x "$WINDRES" || {
-      WINDRES=""
-      echo Windres NOT found, you will not have pretty icon files in the hydra cygwin executables
-      echo
+    echo "Windres found, will attach icons to hydra cygwin executables"
+    echo HYDRA_LOGO=hydra-logo.o >> Makefile
+    echo PWI_LOGO=pw-inspector-logo.o >> Makefile
+    windres hydra-logo.rc hydra-logo.o
+    windres pw-inspector-logo.rc pw-inspector-logo.o
+}
+test -x "$WINDRES" || {
+WINDRES=""
+echo Windres NOT found, you will not have pretty icon files in the hydra cygwin executables
+echo
     }
     echo
 fi
 if [ "x$WINDRES" = "x" ]; then
-  echo HYDRA_LOGO= >> Makefile
-  echo PWI_LOGO= >> Makefile
+    echo HYDRA_LOGO= >> Makefile
+    echo PWI_LOGO= >> Makefile
 fi
 cat Makefile.am >> Makefile
 echo "now type \"make\""